<UserControl x:Class="SEToolbox.Views.ControlSafeZone"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:converters="clr-namespace:SEToolbox.Converters"
             xmlns:controls="clr-namespace:SEToolbox.Controls"
             xmlns:commands="clr-namespace:SEToolbox.Services"
             xmlns:views="clr-namespace:SEToolbox.Views"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             lex:ResxLocalizationProvider.DefaultAssembly="SEToolbox"
             lex:ResxLocalizationProvider.DefaultDictionary="Resources"
             mc:Ignorable="d"
             d:DesignHeight="400" d:DesignWidth="600"
             commands:DialogService.IsRegisteredView="True">
    <UserControl.Resources>
        <converters:BooleanConverter x:Key="BoolToVis" />
        <converters:InverseBooleanConverter x:Key="InverseBoolToVis" />
    </UserControl.Resources>
    
    <Grid>
        <TabControl>
            <TabItem Header="Safe Zone">
                <ScrollViewer>
                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Name:"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding DisplayName, Mode=TwoWay}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="Enabled:"/>
                        <CheckBox Grid.Row="1" Grid.Column="1" IsChecked="{Binding IsEnabled, Mode=TwoWay}"/>

                        <Label Grid.Row="2" Grid.Column="0" Content="Visible:"/>
                        <CheckBox Grid.Row="2" Grid.Column="1" IsChecked="{Binding IsVisible, Mode=TwoWay}"/>

                        <Label Grid.Row="3" Grid.Column="0" Content="Shape:"/>
                        <ComboBox Grid.Row="3" Grid.Column="1" 
                                  ItemsSource="{Binding AvailableShapes}"
                                  SelectedItem="{Binding Shape, Mode=TwoWay}" />


                        <!-- Nur anzeigen, wenn Shape = Sphere -->
                        <Label Grid.Row="4" Grid.Column="0" Content="Radius:"
                                    Visibility="{Binding IsSphereShape, Converter={StaticResource BoolToVis}}" />
                        <TextBox Grid.Row="4" Grid.Column="1"
                                    Text="{Binding Radius, Mode=TwoWay}"
                                    Visibility="{Binding IsSphereShape, Converter={StaticResource BoolToVis}}" />

                        <!-- Nur anzeigen, wenn NICHT Sphere -->
                        <Label Grid.Row="4" Grid.Column="0" Content="Size:"
                                    Visibility="{Binding IsSphereShape, Converter={StaticResource InverseBoolToVis}}" />
                        <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal"
                                    Visibility="{Binding IsSphereShape, Converter={StaticResource InverseBoolToVis}}">
                            <TextBox Width="60" Margin="0,0,10,0" Text="{Binding SizeX, Mode=TwoWay}" />
                            <TextBox Width="60" Margin="0,0,10,0" Text="{Binding SizeY, Mode=TwoWay}" />
                            <TextBox Width="60" Margin="0,0,10,0" Text="{Binding SizeZ, Mode=TwoWay}" />
                        </StackPanel>


                        <Label Grid.Row="5" Grid.Column="0" Content="Texture:"/>
                        <ComboBox Grid.Row="5" Grid.Column="1"
                              ItemsSource="{Binding AvailableTextures}"
                              SelectedItem="{Binding Texture, Mode=TwoWay}" />

                        <Label Grid.Row="10" Grid.Column="0" Content="Position:"/>
                        <views:ControlPosition Grid.Row="10" Grid.Column="1" />

                        <Label Grid.Row="12" Grid.Column="0" Content="Model Color:"/>
                        <TextBlock Grid.Row="12" Grid.Column="1">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0:F2}, {1:F2}, {2:F2}">
                                    <Binding Path="ModelColor.X"/>
                                    <Binding Path="ModelColor.Y"/>
                                    <Binding Path="ModelColor.Z"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <!-- Zeile 13: Creating Block -->
                        <Button Grid.Row="13" Grid.Column="0" Content="Suche Erzeugenden Block"
                            Command="{Binding SearchCreatingEntitiesCommand}" />
                        <TextBlock Grid.Row="13" Grid.Column="1"
                            Text="{Binding CreatingBlockInfo}"
                            TextTrimming="CharacterEllipsis"/>

                        <!-- Zeile 14: Creating Grid -->
                        <Button Grid.Row="14" Grid.Column="0" Content="Suche Erzeugendes Grid"
                            Command="{Binding SearchCreatingEntitiesCommand}" />
                        <TextBlock Grid.Row="14" Grid.Column="1"
                            Text="{Binding CreatingGridInfo}"
                            TextTrimming="CharacterEllipsis" />

                    </Grid>
                    
                </ScrollViewer>
                
            </TabItem>
            
            <TabItem Header="Access Type: Player">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="6" Grid.Column="0" Content="AccessType (Players):"/>
                    <ComboBox Grid.Row="6" Grid.Column="1" 
                                  ItemsSource="{Binding AccessTypes}"
                                  SelectedItem="{Binding AccessTypePlayers, Mode=TwoWay}" />

                    
                </Grid>
            </TabItem>
            
            <TabItem Header="Access Type: Factions">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="7" Grid.Column="0" Content="AccessType (Factions):"/>
                    <ComboBox Grid.Row="7" Grid.Column="1" 
              ItemsSource="{Binding AccessTypes}"
              SelectedItem="{Binding AccessTypeFactions, Mode=TwoWay}" />

 
                </Grid>
            </TabItem>
            <TabItem Header="Access Type: Grids">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="8" Grid.Column="0" Content="AccessType (Grids):"/>
                    <ComboBox Grid.Row="8" Grid.Column="1" 
             ItemsSource="{Binding AccessTypes}"
             SelectedItem="{Binding AccessTypeGrids, Mode=TwoWay}" />


                </Grid>
            </TabItem>
            <TabItem Header="Access Type: Floating Objects">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="9" Grid.Column="0" Content="AccessType (Floating Objects):"/>
                    <ComboBox Grid.Row="9" Grid.Column="1"  
             ItemsSource="{Binding AccessTypes}"
             SelectedItem="{Binding AccessTypeFloatingObjects, Mode=TwoWay}" />
                </Grid>
            </TabItem>
            <TabItem Header="Allowed Actions">
                <StackPanel Margin="10">
                    <CheckBox Content="Damage" IsChecked="{Binding IsDamageAllowed}" />
                    <CheckBox Content="Shooting" IsChecked="{Binding IsShootingAllowed}" />
                    <CheckBox Content="Drilling" IsChecked="{Binding IsDrillingAllowed}" />
                    <CheckBox Content="Welding" IsChecked="{Binding IsWeldingAllowed}" />
                    <CheckBox Content="Grinding" IsChecked="{Binding IsGrindingAllowed}" />
                    <CheckBox Content="Building" IsChecked="{Binding IsBuildingAllowed}" />
                    <CheckBox Content="Building Projections" IsChecked="{Binding IsBuildingProjectionsAllowed}" />
                    <CheckBox Content="Voxel Hand" IsChecked="{Binding IsVoxelHandAllowed}" />
                    <CheckBox Content="Landing Gear Lock" IsChecked="{Binding IsLandingGearLockAllowed}" />
                    <CheckBox Content="Convert to Station" IsChecked="{Binding IsConvertToStationAllowed}" />
                </StackPanel>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
